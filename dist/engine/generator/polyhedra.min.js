/*
 MIT
*/
function GenPolyhedra(){Generator.call(this);this._genprops.item=!0;this._set_name("Polyhedra");this._generate=function(f,g,e,b,c,a){this._set_camera_position(0,0,2);var d=POLYHEDRA[this._item];if(!is_null_undf(d)){var x=Math.abs(b-f),h=Math.abs(c-g),l=Math.abs(a-e);f=(f+b)/2;g=(g+c)/2;e=(e+a)/2;var m=Number.NEGATIVE_INFINITY;var y=Number.POSITIVE_INFINITY;var n=Number.NEGATIVE_INFINITY;var z=Number.POSITIVE_INFINITY;var p=Number.NEGATIVE_INFINITY;var A=Number.POSITIVE_INFINITY,q=Number.NEGATIVE_INFINITY,
k=Number.POSITIVE_INFINITY;var r=Number.NEGATIVE_INFINITY;var t=Number.POSITIVE_INFINITY;var u=Number.NEGATIVE_INFINITY;for(var v=Number.POSITIVE_INFINITY,w=0;w<d.vertex.length;w+=1)a=d.vertex[w][0],c=d.vertex[w][1],b=d.vertex[w][2],a>=f?(m=Math.max(m,a),y=Math.min(y,a)):(q=Math.max(q,a),k=Math.min(k,a)),c>=g?(n=Math.max(n,c),z=Math.min(z,c)):(r=Math.max(r,c),t=Math.min(t,c)),b>=e?(p=Math.max(p,b),A=Math.min(A,b)):(u=Math.max(u,b),v=Math.min(v,b));m=Math.min(1,x/(2*Math.abs(m-y)));n=Math.min(1,h/
(2*Math.abs(n-z)));p=Math.min(1,l/(2*Math.abs(p-A)));x=Math.min(1,x/(2*Math.abs(q-k)));r=Math.min(1,h/(2*Math.abs(r-t)));u=Math.min(1,l/(2*Math.abs(u-v)));l=[];h=1;for(k=0;k<d.vertex.length;k+=1)a=d.vertex[k][0],c=d.vertex[k][1],b=d.vertex[k][2],v=a>=f?m:x,t=c>=g?n:r,q=b>=e?p:u,a*=v,c*=t,b*=q,l.push(new Vertex(f+a,g+c,e+b,"V{0}".format(h))),h+=1;f=[];g=1;for(e=0;e<d.face.length;e+=1){a=[];for(h=0;h<d.face[e].length;h+=1)a.push(l[d.face[e][h]]);a=new Face(a,"F"+g.toString());a.reverse_vertices();a.enable_uv_flip();
a.set_uv_rotation(-90);a.set_bomb_behaviour(a.behaviour.AROUND);f.push(a);g+=1}this._volume.add_face(f)}}};
