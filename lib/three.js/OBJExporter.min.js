THREE.OBJExporter=function(){};THREE.OBJExporter.prototype={constructor:THREE.OBJExporter,parse:function(f){var b="";var p=0;var r=0;var u=0;var n=new THREE.Vector3();var o=new THREE.Vector3();var a=new THREE.Vector2();var h,g,e,d,c,q=[];var t=function(y){var z=0;var l=0;var k=0;var v=y.geometry;var j=new THREE.Matrix3();if(v instanceof THREE.Geometry){v=new THREE.BufferGeometry().setFromObject(y)}if(v instanceof THREE.BufferGeometry){var m=v.getAttribute("position");var w=v.getAttribute("normal");var i=v.getAttribute("uv");var x=v.getIndex();b+="o "+y.name+"\n";if(y.material&&y.material.name){b+="usemtl "+y.material.name+"\n"}if(m!==undefined){for(h=0,d=m.count;h<d;h++,z++){n.x=m.getX(h);n.y=m.getY(h);n.z=m.getZ(h);n.applyMatrix4(y.matrixWorld);b+="v "+n.x+" "+n.y+" "+n.z+"\n"}}if(i!==undefined){for(h=0,d=i.count;h<d;h++,k++){a.x=i.getX(h);a.y=i.getY(h);b+="vt "+a.x+" "+a.y+"\n"}}if(w!==undefined){j.getNormalMatrix(y.matrixWorld);for(h=0,d=w.count;h<d;h++,l++){o.x=w.getX(h);o.y=w.getY(h);o.z=w.getZ(h);o.applyMatrix3(j);b+="vn "+o.x+" "+o.y+" "+o.z+"\n"}}if(x!==null){for(h=0,d=x.count;h<d;h+=3){for(c=0;c<3;c++){g=x.getX(h+c)+1;q[c]=(p+g)+(w||i?"/"+(i?(r+g):"")+(w?"/"+(u+g):""):"")}b+="f "+q.join(" ")+"\n"}}else{for(h=0,d=m.count;h<d;h+=3){for(c=0;c<3;c++){g=h+c+1;q[c]=(p+g)+(w||i?"/"+(i?(r+g):"")+(w?"/"+(u+g):""):"")}b+="f "+q.join(" ")+"\n"}}}else{console.warn("THREE.OBJExporter.parseMesh(): geometry type unsupported",v)}p+=z;r+=k;u+=l};var s=function(i){var m=0;var l=i.geometry;var k=i.type;if(l instanceof THREE.Geometry){l=new THREE.BufferGeometry().setFromObject(i)}if(l instanceof THREE.BufferGeometry){var j=l.getAttribute("position");b+="o "+i.name+"\n";if(j!==undefined){for(h=0,d=j.count;h<d;h++,m++){n.x=j.getX(h);n.y=j.getY(h);n.z=j.getZ(h);n.applyMatrix4(i.matrixWorld);b+="v "+n.x+" "+n.y+" "+n.z+"\n"}}if(k==="Line"){b+="l ";for(g=1,d=j.count;g<=d;g++){b+=(p+g)+" "}b+="\n"}if(k==="LineSegments"){for(g=1,e=g+1,d=j.count;g<d;g+=2,e=g+1){b+="l "+(p+g)+" "+(p+e)+"\n"}}}else{console.warn("THREE.OBJExporter.parseLine(): geometry type unsupported",l)}p+=m};f.traverse(function(i){if(i instanceof THREE.Mesh){t(i)}if(i instanceof THREE.Line){s(i)}});return b}};